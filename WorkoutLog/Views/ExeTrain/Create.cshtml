@model WorkoutLog.Models.ExeTrain

@{
    ViewBag.Title = "Wybierz ćwiczenie";
}




@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <br />
        <h4>Jakie ćwiczenia wykonałeś na tym treningu? </h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})

        <div class="form-group">
            @Html.LabelFor(model => model.ExerciseId, "Nazwa ćwiczenia:", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ExerciseId, ViewBag.ListForDropdown as SelectList, "Wybierz ćwiczenie")
                @Html.ValidationMessageFor(model => model.Exercise.ExerciseName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sets, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sets, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Sets, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rep, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rep, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Rep, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Weight, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Info, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Info, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Info, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Dodaj" class="btn btn-default"/>
            </div>
        </div>
    </div>
}

<div>   
    <a href="@Url.Action("Details", "Training", new { id = Model.TrainingId})"> Wróć do podglądu treningu </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
